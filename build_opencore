#!/usr/bin/env bash
set -eu
source globals

######################################################################
# defaults

# export LIBGUESTFS_DEBUG=1
# export LIBGUESTFS_TRACE=1


######################################################################
# define helper functions

function msg {
  local txt="$1"
  local bold="\x1b[1m"
  local normal="\x1b[0m"
  echo -e "${bold}### ${txt}${normal}"
}

function do_cleanup {
  msg "cleaning up ..."
  if test "${GUESTFISH_PID}" != ""; then
    guestfish --remote -- exit >/dev/null 2>&1 || true
  fi
  rm -rf "${WORK}"
}


######################################################################
# guestfish script helpers

function fish {
  echo "#" "$@"
  guestfish --remote -- "$@"    || exit 1
}

function fish_init {
  local format

  case "${OPENCORE_QCOW2}" in
    *.raw)
      format="raw"
      ;;
    *)
      format="qcow2"
      ;;
  esac

  msg "creating and adding disk image"
  fish disk-create "${BUILD_DIR}/${OPENCORE_QCOW2}" "${format}" 384M
  fish add "${BUILD_DIR}/${OPENCORE_QCOW2}"
  fish run
}

function fish_finish {
  fish umount-all
}


######################################################################
# sanity checks

if test ! -f "${OPENCORE_DIR}/${CONFIG_LIST}.in"; then
  echo "ERROR: cfg ${CONFIG_LIST} not found. Exiting."
  exit 1
fi

if test -f "${OPENCORE_QCOW2}"; then
  echo "ERROR: image ${OPENCORE_QCOW2} exists. Exiting."
  exit 1
fi


# git clone https://github.com/acidanthera/OcBinaryData.git
# git subodule --init

######################################################################
# go!

pushd "${OPENCORE_DIR}" >/dev/null

# create work dir
WORK="$(mktemp -d)"
trap 'do_cleanup' EXIT INT TERM ERR

# generate plist config
sed -e "s|##RESOLUTION##|${RESOLUTION}|g" "${CONFIG_LIST}.in" > \
  "${BUILD_DIR}/${CONFIG_LIST}"

msg "copy files from local folder"
cp -a "${OPENCORE_DIR}/EFI" "${WORK}"

export LIBGUESTFS_BACKEND=direct
eval "$(guestfish --listen)"
if test "${GUESTFISH_PID}" = ""; then
  echo "ERROR: starting guestfish failed. Exiting."
  exit 1
fi

fish_init

msg "partitioning disk image"
fish part-init /dev/sda gpt
fish part-add /dev/sda p 2048 300000
fish part-add /dev/sda p 302048 -2048
fish part-set-gpt-type /dev/sda 1 C12A7328-F81F-11D2-BA4B-00A0C93EC93B
fish part-set-bootable /dev/sda 1 true
fish mkfs vfat /dev/sda1 label:EFI
fish mkfs vfat /dev/sda2 label:OpenCore
fish mount /dev/sda2 /
fish mkdir /ESP
fish mount /dev/sda1 /ESP

msg "copy files to disk image"
cp -v "${BUILD_DIR}/${CONFIG_LIST}" "${WORK}/config.plist"
fish mkdir /ESP/EFI
fish mkdir /ESP/EFI/OC
fish mkdir /ESP/EFI/OC/Kexts
fish mkdir /ESP/EFI/OC/ACPI
fish mkdir /ESP/EFI/OC/Resources
fish mkdir /ESP/EFI/OC/Tools
fish copy-in "${WORK}/EFI/BOOT" /ESP/EFI
fish copy-in "${WORK}/EFI/OC/OpenCore.efi" /ESP/EFI/OC
fish copy-in "${WORK}/EFI/OC/Drivers" /ESP/EFI/OC/
fish copy-in "${WORK}/EFI/OC/Kexts" /ESP/EFI/OC/
fish copy-in "${WORK}/EFI/OC/ACPI" /ESP/EFI/OC/
fish copy-in "${OPENCORE_DIR}/OcBinaryData/Resources" /ESP/EFI/OC/
fish copy-in "${WORK}/EFI/OC/Tools" /ESP/EFI/OC/
fish copy-in "${WORK}/config.plist" /ESP/EFI/OC/

fish find /ESP/
fish_finish
